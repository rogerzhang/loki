{
	servicesSetup:'Loki.Build.ServicesSetup',
	builtPath:'built',
	tempPath:'temp',
	memoryPath:'memory',
	sourcePath:'source',
	uizePath:'../UIZE-JavaScript-Framework/site-source',
	modulesFolder:'js',
	folderOrgNamespaces:[
		'Loki'
	],
	isDev:'false',
	headComments:{
	},
	scrunchedHeadComments:{
		Uize:'Uize.Build.Templates.Module.ScrunchedHeadComment',
		Loki:'Loki.Build.Templates.Module.HeadComment'
	},
	staleBefore:'now',
	staticFilePathMatcher:/\.(gif|jpg|png|ico|html|css|htaccess|txt)$/,
	buildSequence:[
		'Uize.Build.Files.UnprocessedFiles',
		'Uize.Build.Files.JsModules'
	],
	testSequence:[
		'build.js Uize.Build.RunUnitTests silent=true',
		'build.js Uize.Build.RunUnitTests useSource=false silent=true'
	],
	moduleConfigs:{
		'Uize.Build.Loc':{
			workingFolder:'loc',
			common:{
				languages:[],
				brandLanguages:{
					3420:['en-US'],         // AT&T
					3610:['en-US'],         // RC Canada
					3710:['en-GB'],         // RC UK
					3810:['en-US'],         // ClearWire
					7310:['en-US','fr-CA']  // TELUS
				},
				primaryLanguage:'en-US',
				pseudoLocale:'en-ZZ',
				pseudoLocalization:{
					expansion:1.15
				},
				translationJobFileFormat:'xliff' // csv | xliff
			},
			projects:{
				ServiceWeb:{
					serviceAdapter:'Loki.LocServiceAdapters.ServiceWeb',
					rootFolderPath:'../git-repos/rc-web/WEB/src/desktop',
					//rootFolderPath:'../svn/rc/amarosa_6-4_XMN_FT1/WEB/src/desktop',

					/* NOTE: Service Web should be updated to support standard BCP47 language codes */
						brandLanguages:{
							3420:['en'],         // AT&T
							3610:['en'],         // RC Canada
							3710:['en-GB'],      // RC UK
							3810:['en'],         // ClearWire
							7310:['en','fr-CA']  // TELUS
						},
						primaryLanguage:'en'
				},
				ServiceWebJedi:{
					serviceAdapter:'Loki.LocServiceAdapters.ServiceWebJedi',
					rootFolderPath:'../svn/rc/amarosa_trunk/JEDI/localStorage/rc-web/dictionaries',
					codeFolderPath:'../svn/rc/amarosa_trunk/JEDI/localStorage/rc-web/repository/browser'
				},
				ServiceWebHtmlTemplates:{
					serviceAdapter:'Loki.LocServiceAdapters.ServiceWebHtmlTemplates',
					rootFolderPath:'../git-repos/rc-web/WEB/src/desktop',
					pseudoLocalization:{
						wrapper:''
					}
				},
				MicRecorder:{
					serviceAdapter:'Loki.LocServiceAdapters.MicRecorder',
					rootFolderPath:'../git-repos/rc-web/WEB/player/com/ringcentral/i18n',

					/* NOTE: should be updated to support standard BCP47 language codes */
						brandLanguages:{
							3420:['en'],         // AT&T
							3610:['en'],         // RC Canada
							3710:['en-GB'],      // RC UK
							3810:['en'],         // ClearWire
							7310:['en','fr-CA']  // TELUS
						},
						primaryLanguage:'en'
				},
				MobileWeb:{
					serviceAdapter:'Loki.LocServiceAdapters.MobileWeb',
					rootFolderPath:'../git-repos/rc-web/WEB/src/mobile/core/js/src'
					//rootFolderPath:'../svn/rc/amarosa_6-4_XMN_FT1/WEB/src/mobile/core/js/src'
				},
				MobileIos:{
					serviceAdapter:'Loki.LocServiceAdapters.MobileIos',
					rootFolderPath:'../svn/rc/IOS-TELUS-RESKINNING'
				},
				MobileAndroid:{
					serviceAdapter:'Loki.LocServiceAdapters.MobileAndroid',
					rootFolderPath:'../svn/rc/Android/RCAB620-Branch/RingCentral/res'
				},
				CloudCti:{
					serviceAdapter:'Loki.LocServiceAdapters.CloudCti',
					rootFolderPath:'../svn/rc/simplion-opencti-0a0e6250af6b/js/lang'
				}
			}
		},
		'Uize.Build.Search':{
			presets:{
				i18nAlert:{
					pathMatcher:/\.js$/,
					matcher:/alert\s*\(('[^']+'|"[^"]+")/,
					pathFilter:/(^|\/)rclibtest\//
				},
				i18nButtonLabel:{
					pathMatcher:/\.js$/,
					matcher:/text\s*:\s('[^']+'|"[^"]+")/,
					pathFilter:/(^|\/)rclibtest\//,
					description:
						'reveals likely cases of inline (non-externalized) strings, particularly in cases where labels are being provided for buttons'
				},
				i18nConcatenation:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/([:\+]\s*)(RC\.Config(?:\.\w+)+|RC\.Lang(?:\.\w+)+(?:\.[A-Z\d]+(?:_[A-Z\d]+)*))\b/
				},
				i18nHtml:{
					pathMatcher:/\.js$/,
					pathFilter:[
						/\/((en|lang|en-GB|fr-CA|en-ZZ)(-\d+)?|omniture)\.js$/,
						/(^|\/)rclibtest\//
					],
					matcher:/<\w[^<>\n\r]*>\s*\w+(\s+\w+)*\b|\b(\w+\s+)*\w+\s*<\/?\w+>/
				},
				i18nStringsWithHtml:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/[A-Z]+(_[A-Z]+)*\s*:\s*.+?<\w[^<>\n\r]*>/
				},
				i18nLinksInStrings:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/https?:\/\//
				},
				i18nTitleProperty:{
					pathMatcher:/\.js$/,
					pathFilter:/(^|\/)rclibtest\//,
					matcher:/title\s*:\s('[^']+'|"[^"]+")/
				},
				i18nStyleInResources:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/style=('[^']+'|"[^"]+")/
				},
				i18nResourceConcat:{
					pathMatcher:/\.js$/,
					pathFilter:/(^|\/)rclibtest\//,
					matcher:/(\w'|\w)\s*\+\s*RC\.Lang\.(\w+\.)+?[A-Z]+(_[A-Z]+)*\b|\bRC\.Lang\.(\w+\.)+?[A-Z]+(_[A-Z]+)*\s*\+\s*(\w'|\w)/,
					description:'reveals instances of resource string concatenation expressions (most matches are cases of concatenation of resource strings with HTML-containing string literals, while a very few cases have possible grammar implications)'
				},
				i18nParensSPlural:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/\b\w+\(s\)/
				},
				i18nPluralUsers:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/\{\d+\}\s+Users/i
				},
				i18nPluralVariant:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/_PLURAL/
				},
				i18nLinkedFragments:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/<a\s.+?>[a-z0-9][^\/@]*?<\/a>/
				},
				i18nLinkedClickHere:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/<a\s.+?>\s*(click|here|click\s+here)\s*<\/a>/i
				},
				i18nNumberedTokens:{
					pathMatcher:/\/(en|lang)(-\d+)?\.js$/,
					matcher:/\{\d+\}/i
				},
				commentedOutCode:{
					pathMatcher:/\.js$/,
					matcher:/\/\*[^\*].*?[\{\}:;].*?\*\/|(\s*\/\/.*\r?\n)*\/\/.*?[\{\}:;].*\r?\n(\s*\/\/.*\r?\n)*|\/\/.*?[\{\}:;].*/
				},
				nakedAlerts:{
					pathMatcher:/\.js$/,
					pathFilter:/(^|\/)rclibtest\//,
					matcher:/[\s\{]alert\s*\(/
				},
				wastefulRcUiMessageCalls:{
					pathMatcher:/\.js$/,
					matcher:/RC\.UI\.Message\(\w+(\.\w+)*\)/,
					description:'reveals cases of calling RC.UI.Message with just a resource string, which is pointless and adds wasteful extra code and function calls'
					/*
						NOTE: instances like this could be easily modified using a regular expression search-and-replace...
							find: RC\.UI\.Message\((\w+(\.\w+)*)\)
							replace: $1
					*/
				},
				wastefulPushCalls:{
					pathMatcher:/\.js$/,
					matcher:/\r?\n\s+([^\.]+)\.push\s*\(.+\r?\n(\s+\1\.push\s*\(.+\r?\n)+/,
					description:'reveals cases of wasteful, multi-line array push calls, which are unnecessaryu as the push method supports an arbitrary number of arguments'
				},
				innerHTML:{
					pathMatcher:/\.js$/,
					matcher:/\.innerHTML\s*=/,
					description:'innerHTML replacement'
				}
			}
		}
	}
}

